All commands keyboard Ctrl+Alt+t to open terminal
Installation software:
Python 3 is already installed in Ubuntu 19.04 and newer

sudo apt install python3-pip
sudo pip3 install pyqt5
sudo pip3 install pyqtchart
sudo pip3 install python-barcode
sudo pip3 install pillow
sudo pip3 install psycopg2
sudo pip3 install sqlalchemy==1.4.0
sudo pip3 install argon2-cffi

if you want a editor install PyCharm community:
Install:
sudo snap install pycharm-community --classic

Rename Pandora-Enterprise_Resource_Planning to Pandora
Installation Pandora as user postgres with password postgres45:
Copy .pgpass in /home/postgres  
in terminal chmod 600 .pgpass

Install postgresql:
in terminal
sudo apt update -y
sudo apt install gnupg2 wget vim -y
sudo sh -c 'echo "deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc|sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
sudo apt update -y
sudo apt install postgresql
sudo systemctl start postgresql
sudo systemctl enable postgresql
psql
set password in psql with \password (postgres45)

if you want get rid of the annoying i386 error with sudo apt update
change:
sudo nano /etc/apt/sources.list.d/pgdg.list
change "deb http://apt.postgresql.org/pub/repos/apt jammy-pgdg main" in:
deb [arch=amd64] http://apt.postgresql.org/pub/repos/apt jammy-pgdg main
and save with ctrl+o exit ctrl+x

Install pgadmin4:
curl -fsS https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo gpg --dearmor -o /usr/share/keyrings/packages-pgadmin-org.gpg
sudo sh -c 'echo "deb [signed-by=/usr/share/keyrings/packages-pgadmin-org.gpg] https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update'
sudo apt install pgadmin4

With the latest update from the login script capslock notification is working now with Linux.

For printing lists:
Retrieve printer_name on Linux terminal:
lpstat -p -d 
set default printer with:
lpoptions -d <printer_name>
set fonts and margins for printing (A4) with:
lpoptions -o page-left=18 -o page-right=0 -o page-top=25 -o page-bottom=80 -o cpi=13 -o lpi=6
Follow these settings exactly for printlists with more pages

Barcode enabling in linux:
Copy file .usbkbd.sh from folder installation in folder /home/postgres ($HOME)
chmod 755 .usbkbd.sh
If the password for Ubuntu changed from postgres45 change it too in .usbkbd.sh

For enabling error sounds:
sudo apt install sox

Installing and creating database:
createdb bisystem
pg_restore --dbname=bisystem  --verbose "/home/postgres/Pandora/data/bisystem.backup"

Since some people are having problems due to changed paths, here is an alternative method for reinstalling a modified database using pgAdmin 4:
Open pgadmin 4, open servers, open postgresql (16 or 17), open databases, select bisystem with your right mouse button and choose
Delete (force), choose databases with your right mouse button and choose create database, type bisystem and create database,
select bisystem with your right mouse button and choose restore, browse to your path were bisystem.backup is located and restore.
Wait until the proces is finished and your new database is installed. 


Copy Pandora with folder structures in /home/postgres so you get /home/postgres/Pandora

The fonts in Linux differ from Windows. (Install Arial, Comic Sans MS, Times, Sans Serif and Consolas)
https://itsfoss.com/install-microsoft-fonts-ubuntu/
in terminal sudo fc-cache -r -f
install Ubuntu tweak tools and increase font  size with 20% for optimal views 
   
startup files in Linux:
Copy pandora.png from folder LINUX in folder /home/postgres/.icons
Copy Pandora.desktop from folder LINUX in /home/postgres/.local/share/applications

in terminal
To compile all Pandora scripts in Python:
cd Pandora
python3 -m compileall ./

Database backup and restore from terminal

backup database:
pg_dump -v --verbose -d bisystem -Fc -f  "/home/postgres/Pandora/data/bisystem.backup"
Take attention: before backup rename original backup, for it will overwrite without warning!

delete database:
dropdb bisystem

create empty database:
createdb bisystem

restore database:
pg_restore --dbname=bisystem  --verbose "/home/postgres/Pandora/data/bisystem.backup"

Before starting the program for the first time run script reset_odd_even.py to set the parameter for odd-even year for the right year
and modify_accounts-passwords.py for changing the new encryption passwords in database bisystem
in command prompt
in folder Pandora
python reset_odd_even.py
modify_accounts-passwords.py 

